/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.github.darioajr.teuthis.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Teuthis message schema */
@org.apache.avro.specific.AvroGenerated
public class Message extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3360707399293116489L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Message\",\"namespace\":\"com.github.darioajr.teuthis.avro\",\"doc\":\"Teuthis message schema\",\"fields\":[{\"name\":\"format\",\"type\":\"string\",\"doc\":\"Message format (json, xml, soap, txt)\"},{\"name\":\"payload\",\"type\":\"bytes\",\"doc\":\"Message payload as bytes\"},{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"Message timestamp in milliseconds\"},{\"name\":\"hostname\",\"type\":\"string\",\"doc\":\"Source hostname\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Message> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Message> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Message> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Message> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Message> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Message to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Message from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Message instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Message fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Message format (json, xml, soap, txt) */
  private java.lang.CharSequence format;
  /** Message payload as bytes */
  private java.nio.ByteBuffer payload;
  /** Message timestamp in milliseconds */
  private long timestamp;
  /** Source hostname */
  private java.lang.CharSequence hostname;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Message() {}

  /**
   * All-args constructor.
   * @param format Message format (json, xml, soap, txt)
   * @param payload Message payload as bytes
   * @param timestamp Message timestamp in milliseconds
   * @param hostname Source hostname
   */
  public Message(java.lang.CharSequence format, java.nio.ByteBuffer payload, java.lang.Long timestamp, java.lang.CharSequence hostname) {
    this.format = format;
    this.payload = payload;
    this.timestamp = timestamp;
    this.hostname = hostname;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return format;
    case 1: return payload;
    case 2: return timestamp;
    case 3: return hostname;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: format = (java.lang.CharSequence)value$; break;
    case 1: payload = (java.nio.ByteBuffer)value$; break;
    case 2: timestamp = (java.lang.Long)value$; break;
    case 3: hostname = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'format' field.
   * @return Message format (json, xml, soap, txt)
   */
  public java.lang.CharSequence getFormat() {
    return format;
  }


  /**
   * Sets the value of the 'format' field.
   * Message format (json, xml, soap, txt)
   * @param value the value to set.
   */
  public void setFormat(java.lang.CharSequence value) {
    this.format = value;
  }

  /**
   * Gets the value of the 'payload' field.
   * @return Message payload as bytes
   */
  public java.nio.ByteBuffer getPayload() {
    return payload;
  }


  /**
   * Sets the value of the 'payload' field.
   * Message payload as bytes
   * @param value the value to set.
   */
  public void setPayload(java.nio.ByteBuffer value) {
    this.payload = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return Message timestamp in milliseconds
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * Message timestamp in milliseconds
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'hostname' field.
   * @return Source hostname
   */
  public java.lang.CharSequence getHostname() {
    return hostname;
  }


  /**
   * Sets the value of the 'hostname' field.
   * Source hostname
   * @param value the value to set.
   */
  public void setHostname(java.lang.CharSequence value) {
    this.hostname = value;
  }

  /**
   * Creates a new Message RecordBuilder.
   * @return A new Message RecordBuilder
   */
  public static com.github.darioajr.teuthis.avro.Message.Builder newBuilder() {
    return new com.github.darioajr.teuthis.avro.Message.Builder();
  }

  /**
   * Creates a new Message RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Message RecordBuilder
   */
  public static com.github.darioajr.teuthis.avro.Message.Builder newBuilder(com.github.darioajr.teuthis.avro.Message.Builder other) {
    if (other == null) {
      return new com.github.darioajr.teuthis.avro.Message.Builder();
    } else {
      return new com.github.darioajr.teuthis.avro.Message.Builder(other);
    }
  }

  /**
   * Creates a new Message RecordBuilder by copying an existing Message instance.
   * @param other The existing instance to copy.
   * @return A new Message RecordBuilder
   */
  public static com.github.darioajr.teuthis.avro.Message.Builder newBuilder(com.github.darioajr.teuthis.avro.Message other) {
    if (other == null) {
      return new com.github.darioajr.teuthis.avro.Message.Builder();
    } else {
      return new com.github.darioajr.teuthis.avro.Message.Builder(other);
    }
  }

  /**
   * RecordBuilder for Message instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Message>
    implements org.apache.avro.data.RecordBuilder<Message> {

    /** Message format (json, xml, soap, txt) */
    private java.lang.CharSequence format;
    /** Message payload as bytes */
    private java.nio.ByteBuffer payload;
    /** Message timestamp in milliseconds */
    private long timestamp;
    /** Source hostname */
    private java.lang.CharSequence hostname;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.github.darioajr.teuthis.avro.Message.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.format)) {
        this.format = data().deepCopy(fields()[0].schema(), other.format);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.payload)) {
        this.payload = data().deepCopy(fields()[1].schema(), other.payload);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.hostname)) {
        this.hostname = data().deepCopy(fields()[3].schema(), other.hostname);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing Message instance
     * @param other The existing instance to copy.
     */
    private Builder(com.github.darioajr.teuthis.avro.Message other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.format)) {
        this.format = data().deepCopy(fields()[0].schema(), other.format);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.payload)) {
        this.payload = data().deepCopy(fields()[1].schema(), other.payload);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.hostname)) {
        this.hostname = data().deepCopy(fields()[3].schema(), other.hostname);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'format' field.
      * Message format (json, xml, soap, txt)
      * @return The value.
      */
    public java.lang.CharSequence getFormat() {
      return format;
    }


    /**
      * Sets the value of the 'format' field.
      * Message format (json, xml, soap, txt)
      * @param value The value of 'format'.
      * @return This builder.
      */
    public com.github.darioajr.teuthis.avro.Message.Builder setFormat(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.format = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'format' field has been set.
      * Message format (json, xml, soap, txt)
      * @return True if the 'format' field has been set, false otherwise.
      */
    public boolean hasFormat() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'format' field.
      * Message format (json, xml, soap, txt)
      * @return This builder.
      */
    public com.github.darioajr.teuthis.avro.Message.Builder clearFormat() {
      format = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'payload' field.
      * Message payload as bytes
      * @return The value.
      */
    public java.nio.ByteBuffer getPayload() {
      return payload;
    }


    /**
      * Sets the value of the 'payload' field.
      * Message payload as bytes
      * @param value The value of 'payload'.
      * @return This builder.
      */
    public com.github.darioajr.teuthis.avro.Message.Builder setPayload(java.nio.ByteBuffer value) {
      validate(fields()[1], value);
      this.payload = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'payload' field has been set.
      * Message payload as bytes
      * @return True if the 'payload' field has been set, false otherwise.
      */
    public boolean hasPayload() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'payload' field.
      * Message payload as bytes
      * @return This builder.
      */
    public com.github.darioajr.teuthis.avro.Message.Builder clearPayload() {
      payload = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * Message timestamp in milliseconds
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * Message timestamp in milliseconds
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.github.darioajr.teuthis.avro.Message.Builder setTimestamp(long value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * Message timestamp in milliseconds
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * Message timestamp in milliseconds
      * @return This builder.
      */
    public com.github.darioajr.teuthis.avro.Message.Builder clearTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'hostname' field.
      * Source hostname
      * @return The value.
      */
    public java.lang.CharSequence getHostname() {
      return hostname;
    }


    /**
      * Sets the value of the 'hostname' field.
      * Source hostname
      * @param value The value of 'hostname'.
      * @return This builder.
      */
    public com.github.darioajr.teuthis.avro.Message.Builder setHostname(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.hostname = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'hostname' field has been set.
      * Source hostname
      * @return True if the 'hostname' field has been set, false otherwise.
      */
    public boolean hasHostname() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'hostname' field.
      * Source hostname
      * @return This builder.
      */
    public com.github.darioajr.teuthis.avro.Message.Builder clearHostname() {
      hostname = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Message build() {
      try {
        Message record = new Message();
        record.format = fieldSetFlags()[0] ? this.format : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.payload = fieldSetFlags()[1] ? this.payload : (java.nio.ByteBuffer) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.hostname = fieldSetFlags()[3] ? this.hostname : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Message>
    WRITER$ = (org.apache.avro.io.DatumWriter<Message>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Message>
    READER$ = (org.apache.avro.io.DatumReader<Message>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.format);

    out.writeBytes(this.payload);

    out.writeLong(this.timestamp);

    out.writeString(this.hostname);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.format = in.readString(this.format instanceof Utf8 ? (Utf8)this.format : null);

      this.payload = in.readBytes(this.payload);

      this.timestamp = in.readLong();

      this.hostname = in.readString(this.hostname instanceof Utf8 ? (Utf8)this.hostname : null);

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.format = in.readString(this.format instanceof Utf8 ? (Utf8)this.format : null);
          break;

        case 1:
          this.payload = in.readBytes(this.payload);
          break;

        case 2:
          this.timestamp = in.readLong();
          break;

        case 3:
          this.hostname = in.readString(this.hostname instanceof Utf8 ? (Utf8)this.hostname : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










